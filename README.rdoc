= fun_with_version_strings

Declare any Ruby object to have a version:

class MyGem; end

FunWith::VersionStrings.versionize( MyGem, "0.0.3" )

Then the following is true:

    MyGem.version # => "0.0.3"
    MyGem.version.major  # => 0
    MyGem.version.minor  # => 0
    MyGem.version.patch  # => 3

You can also compare versions.  Observe:

    version_a = "9.1.4"
    version_b = "10.1.0"
    version_c = "9.2.0"
    
    version_c > version_a   # => true
    version_c == version_a  # => false
    version_b > version_a   # => true
    version_b < version_a   # => false
    
But comparisons are a bit tricky.  It will try to compare standard strings as version strings, if the standard string is of the proper format.  Otherwise it will compare the two as regular strings.

If the versionized object responds to ".root" and that root is a FunWith::Files::FilePath, you don't need to give a version.  versionize() will try to read the version from the VERSION file in the root directory.

It's a common pattern with my gems.

Other useful stuff:

    "10.4.9".fwvs_version_string.patch  #  => 9  (converts a normal string into a FunWith::VersionStrings::VersionString)



== Contributing to fun_with_version_strings
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2013 Bryce Anderson. See LICENSE.txt for
further details.

